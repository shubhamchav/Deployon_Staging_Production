name: CI + CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Package HTML
        run: |
          echo "Preparing HTML file for deployment..."
          mkdir -p deploy
          cp index.html deploy/

  DeployDev:
    name: Deploy to Dev
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: 'http://localhost:8000/index.html'
    steps:
      - name: Development Deployment
        run: echo "Development environment - No real deployment needed."

  DeployStaging:
    name: Deploy to Staging
    if: github.event.ref == 'refs/heads/master'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: 'http://<STAGING_EC2_PUBLIC_IP>/index.html'
    steps:
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Check & Prepare Staging Server (Nginx)
        run: |
          echo "Checking prerequisites on Staging server..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }} << 'EOF'
          sudo apt update -y || sudo yum update -y
          sudo apt install -y nginx || sudo yum install -y nginx
          sudo systemctl enable nginx
          sudo systemctl start nginx
          sudo mkdir -p /usr/share/nginx/html
          sudo chmod -R 755 /usr/share/nginx/html
          echo "Staging server is ready."
          EOF

      - name: Deploy to Staging Server
        run: |
          echo "Deploying to Staging..."
          scp -o StrictHostKeyChecking=no -r deploy/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }}:/usr/share/nginx/html/
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }} "sudo systemctl restart nginx"

  DeployProd:
    name: Deploy to Production
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'http://<PRODUCTION_EC2_PUBLIC_IP>/index.html'
    steps:
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Check & Prepare Production Server (Nginx)
        run: |
          echo "Checking prerequisites on Production server..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }} << 'EOF'
          sudo apt update -y || sudo yum update -y
          sudo apt install -y nginx || sudo yum install -y nginx
          sudo systemctl enable nginx
          sudo systemctl start nginx
          sudo mkdir -p /usr/share/nginx/html
          sudo chmod -R 755 /usr/share/nginx/html
          echo "Production server is ready."
          EOF

      - name: Deploy to Production Server
        run: |
          echo "Deploying to Production..."
          scp -o StrictHostKeyChecking=no -r deploy/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }}:/usr/share/nginx/html/
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }} "sudo systemctl restart nginx"
